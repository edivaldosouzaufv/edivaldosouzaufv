<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>calculo_pec_103_final_codigo_personalisado</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection/>
        <schema/>
        <table/>
        <size_limit_lines/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2021/01/04 21:44:12.964</created_date>
    <modified_user>-</modified_user>
    <modified_date>2021/01/04 21:44:12.964</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>Table input</from>
      <to>Formula</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Formula</from>
      <to>String operations</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>String operations</from>
      <to>Select values</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Art_4</from>
      <to>Art_4_Professor_EBTT_Normal</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Art_4_Professor_EBTT_Normal</from>
      <to>Modified Java Script Value 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Modified Java Script Value 2</from>
      <to>Art_10_idade</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Art_10_idade</from>
      <to>Art_10_Professor_EBTT_Normal</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Art_10_Professor_EBTT_Normal</from>
      <to>Modified Java Script Value 2 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Modified Java Script Value 2 2</from>
      <to>Art_10_Insalubridade</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Art_10_Insalubridade</from>
      <to>Selecionado_Melhor_Data</to>
      <enabled>N</enabled>
    </hop>
    <hop>
      <from>Selecionado_Melhor_Data</from>
      <to>Select values 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Art_4</from>
      <to>Art_4_Professor_EBTT_Normal</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Art_10_idade</from>
      <to>Art_10_Professor_EBTT_Normal</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Modified Java Script Value 2 2</from>
      <to>Art_10_Insalubridade</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Art_10_Insalubridade</from>
      <to>Selecionado_Melhor_Data</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Select values 2</from>
      <to>Database lookup</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Database lookup</from>
      <to>DIM Tempo 2</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DIM Tempo 2</from>
      <to>DIM Tempo</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Select values</from>
      <to>Art_20</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Art_20</from>
      <to>Art_20_Professor_EBTT_Normal</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>DIM Tempo</from>
      <to>Update</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Art_20_Professor_EBTT_Normal</from>
      <to>Modified Java Script Value</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Modified Java Script Value</from>
      <to>Art_4</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Art_10_Insalubridade</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Artigo 4 pec 2019
var a = false;
var b = false;
var c = false;
var d = false;
var insalubridade_final  = 0;
var falta_ultimo_cargo = 0;
var falta_tempo_servico_publico = 0;


if(ano_data_insalubridade > 0 ){

		if(idade_ano >= 60){ //60 anos - 25 de exposicao - 10 serviço publico - 5 ultimom cargo

			var resultado = (ano_data_atual - ano_data_insalubridade) - 25;  //25 anos de exposição
			if(resultado >= 0){
				insalubridade_final = 0;
				a = true;
			}else{
			   insalubridade_final = 25 - (ano_data_atual - ano_data_insalubridade) ;
			}
		
			if(tempo_servico_publico_averbacao_total_ano >= 10){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 10 - tempo_servico_publico_averbacao_total_ano ;
             }  



			if(ultimo_cargo_ano >= 5){
                  c = true;
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
				total_ano_final2 = data_atual;
			}else if(insalubridade_final >= falta_ultimo_cargo &amp;&amp; insalubridade_final > 0 &amp;&amp; insalubridade_final >= falta_tempo_servico_publico){
				
                  var ano_atual_aposen= ano_data_insalubridade  + 25; 


                 if(dias_data_insalubridade &lt; 10){
                    var dias = '0'+ dias_data_insalubridade;
                 }else{
                    var dias = dias_data_insalubridade;
                 }


                 if(mes_data_insalubridade &lt; 10){
                    var mes2 = '0'+ (mes_data_insalubridade - 1) ;
                 }else{
                    var mes2 = mes_data_insalubridade - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1] , array4[2]);

                 var total_ano_final2 = novaData4; 
				



			}else if(insalubridade_final &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){
				tempo_aposentar =  falta_ultimo_cargo;

				var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 var total_ano_final2 = novaData4; 

		
				
			}else if(insalubridade_final &lt;= falta_tempo_servico_publico  &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){
				 var ano_atual_aposen= ano_data_admissao  + 10; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 var total_ano_final2 = novaData3; 
			
			}	
		}else{
			var resultado = (ano_data_atual - ano_data_insalubridade) - 25;  //25 anos de exposição
			if(resultado >= 0){
				insalubridade_final = 0;
				a = true;
			}else{
			   insalubridade_final = 25 - (ano_data_atual - ano_data_insalubridade) ;
			}

			
			if(tempo_servico_publico_averbacao_total_ano >= 10){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 10 - tempo_servico_publico_averbacao_total_ano ;
             }  


			 falta_idade = 60 - idade_ano;
	
			if(ultimo_cargo_ano >= 5){
                  c = true;
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }



			if(a == true &amp;&amp; b == true &amp;&amp; c== true &amp;&amp; falta_idade &lt;= 0){
				total_ano_final = data_atual;
e = 1;
			}else if(insalubridade_final >= falta_idade &amp;&amp; insalubridade_final >= falta_ultimo_cargo &amp;&amp; insalubridade_final > 0 &amp;&amp; insalubridade_final >= falta_tempo_servico_publico){
				
                  var ano_atual_aposen= ano_data_insalubridade  + 25; 


                 if(dias_data_insalubridade &lt; 10){
                    var dias = '0'+ dias_data_insalubridade;
                 }else{
                    var dias = dias_data_insalubridade;
                 }


                 if(mes_data_insalubridade &lt; 10){
                    var mes2 = '0'+ (mes_data_insalubridade - 1) ;
                 }else{
                    var mes2 = mes_data_insalubridade - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 var total_ano_final2 = novaData4; 
				

e = 2;

			}else if(falta_idade &lt;= falta_ultimo_cargo  &amp;&amp; insalubridade_final &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){
				tempo_aposentar =  falta_ultimo_cargo;

				var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 var total_ano_final2 = novaData4; 

		e = 3;
				
			}else if( falta_tempo_servico_publico >= falta_idade &amp;&amp; insalubridade_final &lt;= falta_tempo_servico_publico  &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){
				 var ano_atual_aposen= ano_data_admissao  + 10; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 var total_ano_final2 = novaData3; 
				e = 4;

			}else if( falta_tempo_servico_publico &lt;= falta_idade &amp;&amp; falta_idade  > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade){

                 //var ano = new Date(data_nascimento);
                 var ano_atual_aposen = ano_data_nascimento + 60;
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento-1)+ "-" + dias_data_nascimento;


//var a1 = data_atual_aposenta;
//var a2 = mes_data_nascimento;
//var a3 = dias_data_nascimento;
                 

				 var array3 = new Array();
                 array3 = data_atual_aposenta.split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 var total_ano_final2 = novaData3;

                 e = 5;

            }
		}


}else{
	
	var total_ano_final2 = null;

}	</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>total_ano_final2</name>
        <rename>Art_10_insalubridade_final</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Art_10_Professor_EBTT_Normal</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Artigo 4 pec 2019
var a = false;
var b = false;
var c = false;
var d = false;
var soma = 0;
var total = 0;
var pedagio = 0;
var falta_tempo_servico_publico = 0;
var falta_ultimo_cargo = 0;
var tempo_aposentar = 0;
var talta_tempo_servico_publico = 0;

var somamulher = 0;
var somahomem = 0;


//Data Atual
var data = new Date();
var dia     = data.getDate(); 
var mes     = data.getMonth();
var ano4    = data.getFullYear(); 
var data_atual = ano4+'-'+mes+'-'+dia;

//converter Data Atual para String
var array2 = new Array();
array2 = data_atual.split('-');
var data_atual  = new Date(array2[0], array2[1], array2[2]);

var e = -1;


function adicionarDiasDataNascimento(dias){
    var hoje        = data_nascimento;
    var dataVenc    = new Date(hoje.getTime() + (dias * 24 * 60 * 60 * 1000));

	if(dataVenc.getDate() &lt; 10){
		var dias = '0'+dataVenc.getDate();
	}else{
		var dias = dataVenc.getDate();
	}

	
	if(dataVenc.getMonth() &lt; 10){
		mes = dataVenc.getMonth();
		var mes2 = '0'+ mes;
	}else{
		mes = dataVenc.getMonth();
		var mes2 = dataVenc.getMonth();
	}

	
    return dataVenc.getFullYear() + "-" + (mes2) + "-" + dias;
}


function adicionarDiasData(dias){
    var hoje        = new Date();
    var dataVenc    = new Date(hoje.getTime() + (dias * 24 * 60 * 60 * 1000));

	if(dataVenc.getDate() &lt; 10){
		var dias = '0'+dataVenc.getDate();
	}else{
		var dias = dataVenc.getDate();
	}

	
	if(dataVenc.getMonth() &lt; 10){
		mes = dataVenc.getMonth();
		var mes2 = '0'+ mes;
	}else{
		mes = dataVenc.getMonth();
		var mes2 = dataVenc.getMonth();
	}

	
    return dataVenc.getFullYear() + "-" + (mes2) + "-" + dias;
}

if(cargo_codigo == '060011'){
	if(sexo == 'M'){
		
		if(idade_ano > 65){
			 f = 2;
             var resultado = tempo_servico_averbacao_total_dias - 9125;  //25 anos
             if(resultado >= 0){
                   var resultado = 0;
                   a = true;
             }else{
                   resultado = 9125 - tempo_servico_averbacao_total_dias;

             }

			if(tempo_servico_publico_averbacao_total_ano >= 10){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 10 - tempo_servico_publico_averbacao_total_ano ;
             }  



			if(ultimo_cargo_ano >= 5){
                  c = true;
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }



            if(resultado >= 0 ){
               

                   var novaData = adicionarDiasData(resultado);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
             
            }

			
			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 var total_ano_final = data_atual;
                 e = 1;

            }


			if(falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 var total_ano_final = novaData4; 

                        e = 3;
            }else if(falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 10; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 var total_ano_final = novaData3; 

                        e = 4;

            }

			
			if(resultado > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio , "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano_final , "yyyyMMdd");

				if(total_ano_diferenca &lt;= date_total_ano_pedagio){
					total_ano_final = total_ano_pedagio;
				}
				
					
			}
			


		}else if(idade_ano &lt; 65){ //65 anos se homem
             var resultado = tempo_servico_averbacao_total_dias - 9125;  //25 anos
             if(resultado >= 0){
                   var resultado = 0;
                   a = true;
             }else{
                   resultado = 9125 - tempo_servico_averbacao_total_dias;

             }

			if(tempo_servico_publico_averbacao_total_ano >= 10){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 10 - tempo_servico_publico_averbacao_total_ano ;
             }  



			if(ultimo_cargo_ano >= 5){
                  c = true;
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }


            falta_idade = 65 - idade_ano;

            if(resultado >= 0 ){
                   var novaData = adicionarDiasData(resultado);	
                   //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);

            }

			
			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 var total_ano_final = data_atual;
                 e = 1;

            }


			if(falta_idade &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 var total_ano_final = novaData4; 

                        e = 3;
            }else if( falta_idade &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 10; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 var total_ano_final = novaData3; 

                        e = 4;

            }else if( falta_tempo_servico_publico &lt;= falta_idade &amp;&amp; falta_idade  > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade){

                 //var ano = new Date(data_nascimento);
                 var ano_atual_aposen= ano_data_nascimento + 65;
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento - 1)+ "-" + dias_data_nascimento;	


                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 var total_ano_final = novaData3; 

                 e = 5;

            }


			
			if(resultado > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio , "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano_final , "yyyyMMdd");

				if(total_ano_diferenca &lt;= date_total_ano_pedagio){
					total_ano_final = total_ano_pedagio;
				}
				
					
			}
			
		}
	}else if(sexo = 'F'){
		if(idade_ano > 62){
			 f = 2;
             var resultado = tempo_servico_averbacao_total_dias - 9125;  //25 anos
             if(resultado >= 0){
                   var resultado = 0;
                   a = true;
             }else{
                   resultado = 9125 - tempo_servico_averbacao_total_dias;

             }

			if(tempo_servico_publico_averbacao_total_ano >= 10){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 10 - tempo_servico_publico_averbacao_total_ano ;
             }  



			if(ultimo_cargo_ano >= 5){
                  c = true;
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }



            if(resultado >= 0 ){

                   var novaData = adicionarDiasData(resultado);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
                        e = 2;
            }

			
			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 var total_ano_final = data_atual;
                 e = 1;

            }


			if(falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 var total_ano_final = novaData4; 

                        e = 3;
            }else if(falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 10; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 var total_ano_final = novaData3; 

                        e = 4;

            }

			
			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio , "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano_final , "yyyyMMdd");

				if(total_ano_diferenca &lt;= date_total_ano_pedagio){
					total_ano_final = total_ano_pedagio;
				}
				
					
			}
		}else{
			f = 2;
             var resultado = tempo_servico_averbacao_total_dias - 9125;  //25 anos
             if(resultado >= 0){
                   var resultado = 0;
                   a = true;
             }else{
                   resultado = 9125 - tempo_servico_averbacao_total_dias;

             }

			if(tempo_servico_publico_averbacao_total_ano >= 10){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 10 - tempo_servico_publico_averbacao_total_ano ;
             }  



			if(ultimo_cargo_ano >= 5){
                  c = true;
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }


            falta_idade = 62 - idade_ano;

            if(resultado >= 0 ){
               
                   var novaData = adicionarDiasData(resultado);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
        
            }

			
			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 var total_ano_final = data_atual;
                 e = 1;

            }


			if(falta_idade &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 var total_ano_final = novaData4; 

                        e = 3;
            }else if( falta_idade &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 10; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 var total_ano_final = novaData3; 

                        e = 4;

            }else if( falta_tempo_servico_publico &lt;= falta_idade &amp;&amp; falta_idade  > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade){

                 //var ano = new Date(data_nascimento);
                 var ano_atual_aposen= ano_data_nascimento + 62;
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento - 1)+ "-" + dias_data_nascimento;	


                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 var total_ano_final = novaData3; 

                 e = 5;

            }


			
			if(resultado > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio , "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano_final , "yyyyMMdd");

				if(total_ano_diferenca &lt;= date_total_ano_pedagio){
					total_ano_final = total_ano_pedagio;
				}
				
					
			}
		}
	}
}else{
	total_ano_final = null;
}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>total_ano_final</name>
        <rename>Art_10_Prof_EBTT_FUNCIONARIO_COMUM</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>400</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Art_10_idade</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Artigo 10 idade pec 2019
var a = false;
var b = false;
var c = false;
var d = false;
var falta_tempo_servico_publico = 0;
var falta_ultimo_cargo = 0;
var tempo_aposentar = 0;
var falta_tempo_servico_publico = 0;

//Data Atual
var data = new Date();
var dia     = data.getDate(); 
var mes     = data.getMonth();
var ano4    = data.getFullYear(); 
var data_atual = ano4+'-'+mes+'-'+dia;

//converter Data Atual para String
var array2 = new Array();
array2 = data_atual.split('-');
var data_atual  = new Date(array2[0], array2[1], array2[2]);

function adicionarDiasData(dias){
    var hoje        = data_atual;
    var dataVenc    = new Date(hoje.getTime() + (dias * 24 * 60 * 60 * 1000));
	if(dataVenc.getDate() &lt; 10){
		var dias = '0'+dataVenc.getDate();
	}else{
		var dias = dataVenc.getDate();
	}

	if(dataVenc.getMonth() &lt; 10){
		mes = dataVenc.getMonth();
		var mes2 = '0'+ mes;
	}else{
		mes = dataVenc.getMonth();
		var mes2 = dataVenc.getMonth();
	}
    return dataVenc.getFullYear() + "-" + (mes2) + "-" + dias;
}


function adicionarAnoData(ano_atual_aposen, status){
	 if(status == 'N'){
		dias = dias_data_nascimento
	    mes = mes_data_nascimento 
	 }else{
		dias = dias_data_admissao
	    mes = mes_data_admissao 
	 }	

	 if(dias &lt; 10){
		  var dias = '0'+ dias;
	 }else{
		  var dias = dias;
	 }

	 if(mes &lt; 10){
		  var mes2 = '0'+ (mes - 1) ;
	 }else{
		  var mes2 = mes - 1;
	 }
	 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
	 var array3 = new Array();
	 array3 = data_atual_aposenta .split('-');
	 //Idade no formato data
	 var novaData3  = new Date((array3[0]), array3[1], array3[2]);
	 total_ano = novaData3; 
	 return total_ano;
}
function dataAposentadoria(a, b, c, falta_idade, falta_ultimo_cargo, falta_tempo_servico_publico, resultado, total_ano_contribuicao, cargo_codigo, sexo){
			var total_ano;
			if(a == true &amp;&amp; b == true &amp;&amp; c == true &amp;&amp; falta_idade == 0){
                 tempo_aposentar = 0;
                 total_ano = data_atual;

			}else if(falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico &amp;&amp; falta_ultimo_cargo >= falta_idade){
                 var ano_atual_aposen= ano_data_admissao  + 5; 
                 total_ano = adicionarAnoData(ano_atual_aposen, 'A')
            }else if(falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico >= falta_idade){
                 var ano_atual_aposen= ano_data_admissao  + 20; 
				 total_ano = adicionarAnoData(ano_atual_aposen, 'A') 	

            }else if(falta_idade > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade &amp;&amp; falta_tempo_servico_publico &lt;= falta_idade){
 				 //var ano = new Date(data_nascimento);
				 if(cargo_codigo != '060011'){
					if(sexo == 'M'){
						var ano_atual_aposen= ano_data_nascimento + 65;
					}else{
						var ano_atual_aposen= ano_data_nascimento + 60;
					}
				 }else if(cargo_codigo == '060011'){
                 	if(sexo == 'M'){
						var ano_atual_aposen= ano_data_nascimento + 62;
					}else{
						var ano_atual_aposen= ano_data_nascimento + 57;
					}
				 }
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento - 1)+ "-" + dias_data_nascimento;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 
			}

			//se menor que data atual total recebe data atual
			var total_total_ano = date2str(total_ano , "yyyyMMdd");
			var total_data_atual= date2str(data_atual , "yyyyMMdd");
			if(total_total_ano &lt;= total_data_atual){
				total_ano =  data_atual;
			}
			
			if(resultado > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str( total_ano_contribuicao, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_contribuicao;
				}
			}
			return total_ano;
}

var resultado = tempo_servico_averbacao_total_dias - 9125;  //25 anos
if(resultado >= 0){
	var resultado_contribuicao = 0;
	a = true;
}else{
	resultado_contribuicao = 9125 - tempo_servico_averbacao_total_dias;
}

if(sexo == 'M'){
	if(cargo_codigo != '060011'){
		falta_idade = 65 - idade_ano;
	}else if(cargo_codigo == '060011'){
		falta_idade = 60 - idade_ano;
	}
}else{
	if(cargo_codigo != '060011'){
		falta_idade = 62 - idade_ano;
	}else if(cargo_codigo == '060011'){
		falta_idade = 57 - idade_ano;
	}
}	

if(tempo_servico_publico_averbacao_total_ano >= 10){
	b = true;
}else{
	falta_tempo_servico_publico = 10 - tempo_servico_publico_averbacao_total_ano ;
}  

if(ultimo_cargo_ano >= 5){
	  c = true;
}else{
	  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
}

if(resultado_contribuicao >= 0 ){
	   var novaData = adicionarDiasData(resultado_contribuicao);	
		//converter para data String novaData
	   var array2 = new Array();
	   array2 = novaData.split('-');
	   //Idade no formato data
	   var total_ano_contribuicao = new Date(array2[0], (array2[1]) , array2[2]);
}
var resultado = dataAposentadoria(a, b, c, falta_idade, falta_ultimo_cargo, falta_tempo_servico_publico, resultado, total_ano_contribuicao, cargo_codigo, sexo);
total_ano = resultado;		

			</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>total_ano_final</name>
        <rename>Art_10</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>528</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Art_20</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Artigo 20 pec 2019
var a = false;
var b = false;
var c = false;
var pedagio = 0;
var falta_tempo_servico_publico = 0;
var falta_ultimo_cargo = 0;
var tempo_aposentar = 0;
var falta_tempo_servico_publico = 0;
var total_ano = 0;
var f = 1;
function adicionarAnoData(ano_atual_aposen, status){

	 if(status == 'N'){
		dias = dias_data_nascimento
	    mes = mes_data_nascimento 
	 }else{
		dias = dias_data_admissao
	    mes = mes_data_admissao 
	 }	

	 if(dias &lt; 10){
		  var dias = '0'+ dias;
	 }else{
		  var dias = dias;
	 }


	 if(mes &lt; 10){
		  var mes2 = '0'+ (mes - 1) ;
	 }else{
		  var mes2 = mes - 1;
	 }

	 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
	 var array3 = new Array();
	 array3 = data_atual_aposenta .split('-');
	 //Idade no formato data
	 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

	 total_ano = novaData3; 

	 return total_ano;

}
function dataAposentadoria(a, b, c, falta_idade, falta_ultimo_cargo, falta_tempo_servico_publico, pedagio, total_ano_pedagio, cargo_codigo, sexo){
			var total_ano;
			if(a == true &amp;&amp; b == true &amp;&amp; c == true &amp;&amp; falta_idade == 0){
                 tempo_aposentar = 0;
                 total_ano = data_atual;

			}else if(falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico &amp;&amp; falta_ultimo_cargo >= falta_idade){
                 var ano_atual_aposen= ano_data_admissao  + 5; 
                 total_ano = adicionarAnoData(ano_atual_aposen, 'A')
            }else if(falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico >= falta_idade){
                 var ano_atual_aposen= ano_data_admissao  + 20; 
				 total_ano = adicionarAnoData(ano_atual_aposen, 'A') 	

            }else if(falta_idade > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade &amp;&amp; falta_tempo_servico_publico &lt;= falta_idade){
 				 //var ano = new Date(data_nascimento);
				 if(cargo_codigo != '060011'){
					if(sexo == 'M'){
						var ano_atual_aposen= ano_data_nascimento + 60;
					}else{
						var ano_atual_aposen= ano_data_nascimento + 57;
					}
				 }else if(cargo_codigo == '060011'){
                 	if(sexo == 'M'){
						var ano_atual_aposen= ano_data_nascimento + 55;
					}else{
						var ano_atual_aposen= ano_data_nascimento + 52;
					}
				 }
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento - 1)+ "-" + dias_data_nascimento;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 
			}

			//se menor que data atual total recebe data atual
			var total_total_ano = date2str(total_ano , "yyyyMMdd");
			var total_data_atual= date2str(data_atual , "yyyyMMdd");
			if(total_total_ano &lt;= total_data_atual){
				total_ano =  data_atual;
			}
			
			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str( total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}
			return total_ano;
}


function adicionarDiasDataPedagio(dias){
    var hoje        = data_pedagio;
    var dataVenc    = new Date(hoje.getTime() + (dias * 24 * 60 * 60 * 1000));

	if(dataVenc.getDate() &lt; 10){
		var dias = '0'+dataVenc.getDate();
	}else{
		var dias = dataVenc.getDate();
	}

	
	if(dataVenc.getMonth() &lt; 10){
		mes = dataVenc.getMonth();
		var mes2 = '0'+ mes;
	}else{
		mes = dataVenc.getMonth();
		var mes2 = dataVenc.getMonth();
	}

	
    return dataVenc.getFullYear() + "-" + (mes2) + "-" + dias;
}

//Data Atual
var data = new Date();
var dia     = data.getDate(); 
var mes     = data.getMonth();
var ano4    = data.getFullYear(); 
var data_atual = ano4+'-'+mes+'-'+dia;

//converter Data Atual para String
var array2 = new Array();
array2 = data_atual.split('-');
var data_atual  = new Date(array2[0], array2[1], array2[2]);
if(sexo == 'M'){
		 if(cargo_codigo != '060011'){
			var resultado = (tempo_servico_averbacao_total_dias - diferenca_data_pec_data_atual) - 12775;  //35 anos
			if(resultado >= 0){
				var pedagio = 0;
				a = true;
			}else{
				resultado2 = 12775 - (tempo_servico_averbacao_total_dias - diferenca_data_pec_data_atual);
				var pedagio = resultado2 * 2;
			}
			falta_idade = 60 - idade_ano;
		 }else if(cargo_codigo == '060011'){
				var resultado_final = tempo_servico_averbacao_total_professor_ebbt_dias;
				var resultado = (resultado_final - diferenca_data_pec_data_atual) - 10950;  //30 anos
				if(resultado >= 0){
					var pedagio = 0;
					a = true;
				}else{
					resultado2 = 10950 - (resultado_final  - diferenca_data_pec_data_atual);
					var pedagio = resultado2 * 2;
				}
			falta_idade = 55 - idade_ano;
		 }

		if(tempo_servico_publico_averbacao_total_ano >= 20){
			   b = true;
		 }else{
			   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
		 }  

		if(ultimo_cargo_ano >= 5){
			  c = true;
		}else{
			  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
		}

		if(pedagio >= 0 ){
			tempo_aposentar = pedagio;

			
			   var novaData = adicionarDiasDataPedagio(tempo_aposentar);	

			   //converter para data String novaData
			   var array2 = new Array();
			   array2 = novaData.split('-');
			   //Idade no formato data
			   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
	
			   
			  //se menor que data atual total recebe data atual
			  var total_ano_pedagio_convertido = date2str(total_ano_pedagio , "yyyyMMdd");
			  var total_data_atual_convertido = date2str(data_atual , "yyyyMMdd");
			  if(total_ano_pedagio_convertido &lt;= total_data_atual_convertido){
				  total_ano_pedagio =  data_atual;
			  }
		}
		if(falta_idade &lt;= 0){
			falta_idade = 0;
		}
		var resultado = dataAposentadoria(a, b, c, falta_idade, falta_ultimo_cargo, falta_tempo_servico_publico, pedagio, total_ano_pedagio, cargo_codigo, sexo);
		total_ano = resultado;
}else if(sexo == 'F'){
		 if(cargo_codigo != '060011'){	
				var resultado = (tempo_servico_averbacao_total_dias - diferenca_data_pec_data_atual) - 10950;  //30 anos
				if(resultado >= 0){
					var pedagio = 0;
					a = true;
				}else{
					resultado2 = 10950 - (tempo_servico_averbacao_total_dias - diferenca_data_pec_data_atual);
					var pedagio = resultado2 * 2;
				}
				falta_idade = 57 - idade_ano;
		 }else if(cargo_codigo == '060011'){	
				var resultado_final = tempo_servico_averbacao_total_professor_ebbt_dias;
				var resultado = (resultado_final - diferenca_data_pec_data_atual) - 9125;  //25 anos
				if(resultado >= 0){
					var pedagio = 0;
					a = true;
				}else{
					resultado2 = 9125 - (resultado_final  - diferenca_data_pec_data_atual);
					var pedagio = resultado2 * 2;
				}
				falta_idade = 57 - idade_ano;
		 }

		if(tempo_servico_publico_averbacao_total_ano >= 20){
			   b = true;
		 }else{
			   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
		 }  

		if(ultimo_cargo_ano >= 5){
			  c = true;
		}else{
			  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
		}
		if(falta_idade &lt;= 0){
			falta_idade = 0;
		}
		if(pedagio >= 0 ){
			tempo_aposentar = pedagio;
			var novaData = adicionarDiasDataPedagio(tempo_aposentar);	
			//converter para data String novaData
			var array2 = new Array();
			array2 = novaData.split('-');
			//Idade no formato data
			var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
			//se menor que data atual total recebe data atual
			var total_ano_pedagio_convertido = date2str(total_ano_pedagio , "yyyyMMdd");
			var total_data_atual_convertido = date2str(data_atual , "yyyyMMdd");
			if(total_ano_pedagio_convertido &lt;= total_data_atual_convertido){
				total_ano_pedagio =  data_atual;
			}
		}
		var resultado = dataAposentadoria(a, b, c, falta_idade, falta_ultimo_cargo, falta_tempo_servico_publico, pedagio, total_ano_pedagio, cargo_codigo, sexo);
		total_ano = resultado;

}
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>total_ano</name>
        <rename>Art_20</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>pedagio</name>
        <rename>pedagio</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>432</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Art_20_Professor_EBTT_Normal</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Artigo 20 pec 2019

var a = false;
var b = false;
var c = false;
var pedagio = 0;
var falta_tempo_servico_publico = 0;
var falta_ultimo_cargo = 0;
var tempo_aposentar = 0;
var falta_tempo_servico_publico = 0;
var total_ano = 0;
var f = 1;

function adicionarDiasDataPedagio(dias){
    var hoje        = data_pedagio;
    var dataVenc    = new Date(hoje.getTime() + (dias * 24 * 60 * 60 * 1000));

	if(dataVenc.getDate() &lt; 10){
		var dias = '0'+dataVenc.getDate();
	}else{
		var dias = dataVenc.getDate();
	}

	
	if(dataVenc.getMonth() &lt; 10){
		mes = dataVenc.getMonth();
		var mes2 = '0'+ mes;
	}else{
		mes = dataVenc.getMonth();
		var mes2 = dataVenc.getMonth();
	}

	
    return dataVenc.getFullYear() + "-" + (mes2) + "-" + dias;
}


//Data Atual
var data = new Date();
var dia     = data.getDate(); 
var mes     = data.getMonth();
var ano4    = data.getFullYear(); 
var data_atual = ano4+'-'+mes+'-'+dia;

//converter Data Atual para String
var array2 = new Array();
array2 = data_atual.split('-');
var data_atual  = new Date(array2[0], array2[1], array2[2]);
		var e = 0;

if(cargo_codigo == '060011'){
	if(sexo == 'M'){

            var resultado = (tempo_servico_averbacao_total_dias - diferenca_data_pec_data_atual) - 12775;  //35 anos
            if(resultado >= 0){
               	var pedagio = 0;
               	a = true;
            }else{
               	resultado2 = 12775 - (tempo_servico_averbacao_total_dias - diferenca_data_pec_data_atual);
               	var pedagio = resultado2 * 2;
            }
			falta_idade = 60 - idade_ano;
	

			if(tempo_servico_publico_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
             }  



			if(ultimo_cargo_ano >= 5){
                  c = true;
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }



            if(pedagio >= 0 ){
                tempo_aposentar = pedagio;

                
                   var novaData = adicionarDiasDataPedagio(tempo_aposentar);	

                   //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
        
				   
				  //se menor que data atual total recebe data atual
				  var total_ano_pedagio_convertido = date2str(total_ano_pedagio , "yyyyMMdd");
			      var total_data_atual_convertido = date2str(data_atual , "yyyyMMdd");
			      if(total_ano_pedagio_convertido &lt;= total_data_atual_convertido){
				      total_ano_pedagio =  data_atual;
			      }
            }
 


			if(falta_idade &lt;= 0){
				falta_idade = 0;
			}
			
			if(a == true &amp;&amp; b == true &amp;&amp; c == true &amp;&amp; falta_idade == 0){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

			}else if(falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico &amp;&amp; falta_ultimo_cargo >= falta_idade){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                      total_ano = novaData4; 

                        e = 2;
            }else if(falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico >= falta_idade){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 3;

            }else if(falta_idade > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade &amp;&amp; falta_tempo_servico_publico &lt;= falta_idade){
 				 //var ano = new Date(data_nascimento);
                 var ano_atual_aposen= ano_data_nascimento + 60;
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento - 1)+ "-" + dias_data_nascimento;	


                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 
				e =4;

			}else{
				total_ano = data_atual;
				e =5;
			}

			//se menor que data atual total recebe data atual
			var total_total_ano = date2str(total_ano , "yyyyMMdd");
			var total_data_atual= date2str(data_atual , "yyyyMMdd");
			if(total_total_ano &lt;= total_data_atual){
				total_ano =  data_atual;
			}
			
			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio , "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

	}else if(sexo == 'F'){

			 
            var resultado = (tempo_servico_averbacao_total_dias - diferenca_data_pec_data_atual) - 10950;  //30 anos
            if(resultado >= 0){
            	var pedagio = 0;
            	a = true;
            }else{
                resultado2 = 10950 - (tempo_servico_averbacao_total_dias - diferenca_data_pec_data_atual);
            	var pedagio = resultado2 * 2;
            }
			falta_idade = 57 - idade_ano;
			
			if(tempo_servico_publico_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
             }  



			if(ultimo_cargo_ano >= 5){
                  c = true;
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }


			if(falta_idade &lt;= 0){
				falta_idade = 0;
			}

            if(pedagio >= 0 ){
                tempo_aposentar = pedagio;

                
                   var novaData = adicionarDiasDataPedagio(tempo_aposentar);	

                   //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
        
				   
				  //se menor que data atual total recebe data atual
				  var total_ano_pedagio_convertido = date2str(total_ano_pedagio , "yyyyMMdd");
			      var total_data_atual_convertido = date2str(data_atual , "yyyyMMdd");
			      if(total_ano_pedagio_convertido &lt;= total_data_atual_convertido){
				      total_ano_pedagio =  data_atual;
			      }
            }
			
			if(a == true &amp;&amp; b == true &amp;&amp; c== true &amp;&amp; falta_idade == 0){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }else if(falta_idade &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                      total_ano = novaData4; 

                        e = 3;
            }else if( falta_idade &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if( falta_tempo_servico_publico &lt;= falta_idade &amp;&amp; falta_idade  > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade){
                 //var ano = new Date(data_nascimento);
                 var ano_atual_aposen= ano_data_nascimento + 57;
			     var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento - 1)+ "-" + dias_data_nascimento;	


                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                 e = 5;

            }else{
				total_ano = data_atual;
			}

			//se menor que data atual total recebe data atual
			var total_total_ano = date2str(total_ano , "yyyyMMdd");
			var total_data_atual= date2str(data_atual , "yyyyMMdd");
			if(total_total_ano &lt;= total_data_atual){
				total_ano =  data_atual;
			}

			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				//var caixa 2 = 10
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano, "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

		}
}else{
	total_ano = null;
}
</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>total_ano</name>
        <rename>Art_20_Prof_EBTT_FUNCIONARIO_COMUM</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>560</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Art_4</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Artigo 20 pec 2019

var anos_dias = 0;
var ab = 0;
function adicionarDiasDataNascimento(dias){
    var hoje        = data_nascimento;
    var dataVenc    = new Date(hoje.getTime() + (dias * 24 * 60 * 60 * 1000));

	if(dataVenc.getDate() &lt; 10){
		var dias = '0'+dataVenc.getDate();
	}else{
		var dias = dataVenc.getDate();
	}

	
	if(dataVenc.getMonth() &lt; 10){
		mes = dataVenc.getMonth();
		var mes2 = '0'+ mes;
	}else{
		mes = dataVenc.getMonth();
		var mes2 = dataVenc.getMonth();
	}

	
    return dataVenc.getFullYear() + "-" + (mes2) + "-" + dias;
}

function adicionarDiasData(dias){
    var hoje        = data_atual;
    var dataVenc    = new Date(hoje.getTime() + (dias * 24 * 60 * 60 * 1000));

	if(dataVenc.getDate() &lt; 10){
		var dias = '0'+dataVenc.getDate();
	}else{
		var dias = dataVenc.getDate();
	}

	
	if(dataVenc.getMonth() &lt; 10){
		mes = dataVenc.getMonth();
		var mes2 = '0'+ mes;
	}else{
		mes = dataVenc.getMonth();
		var mes2 = dataVenc.getMonth();
	}

	
    return dataVenc.getFullYear() + "-" + (mes2) + "-" + dias;
}


function somatotal(ano_final, tipo){
resultado =0;

if(ano_final == 2021){
	if(tipo == 'F'){
		resultado = 88;
    }else{
    	resultado = 98;
    }
}else if(ano_final == 2022){
	if(tipo == 'F'){
		resultado = 89;
    }else{
    	resultado = 99;
    }
}else if(ano_final == 2023){
	if(tipo == 'F'){
		resultado = 90;
    }else{
    	resultado = 100;
    }
}else if(ano_final == 2024){
	if(tipo == 'F'){
		resultado = 91;
    }else{
    	resultado = 101;
    }
}else if(ano_final == 2025){
	if(tipo == 'F'){
		resultado = 92;
    }else{
    	resultado = 102;
    }
}else if(ano_final == 2026){
	if(tipo == 'F'){
		resultado = 93;
    }else{
    	resultado = 103;
    }
}else if(ano_final == 2027){
	if(tipo == 'F'){
		resultado = 94;
    }else{
    	resultado = 104;
    }
}else if(ano_final == 2028){
	if(tipo == 'F'){
		resultado = 95;
    }else{
    	resultado = 105;
    }
}else if(ano_final == 2029){
	if(tipo == 'F'){
		resultado = 96;
    }else{
    	resultado = 105;
    }
}else if(ano_final == 2030){
	if(tipo == 'F'){
		resultado = 97;
    }else{
    	resultado = 105;
    }
}else if(ano_final == 2031){
	if(tipo == 'F'){
		resultado = 98;
    }else{
    	resultado = 105;
    }
}else if(ano_final == 2032){
	if(tipo == 'F'){
		resultado = 99;
    }else{
    	resultado = 105;
    }
}else if(ano_final == 2033){
	if(tipo == 'F'){
		resultado = 100;
    }else{
    	resultado = 105;
    }
}else if(ano_final > 2033) {
	if(tipo == 'F'){
		resultado = 100;
    }else{
    	resultado = 105;
    }
}

return resultado;
}

function somatotalprofessorebtt(ano_final, tipo){
resultado =0;

if(ano_final == 2021){
	if(tipo == 'F'){
		resultado = 83;
    }else{
    	resultado = 93;
    }
}else if(ano_final == 2022){
	if(tipo == 'F'){
		resultado = 84;
    }else{
    	resultado = 94;
    }
}else if(ano_final == 2023){
	if(tipo == 'F'){
		resultado = 85;
    }else{
    	resultado = 95;
    }
}else if(ano_final == 2024){
	if(tipo == 'F'){
		resultado = 86;
    }else{
    	resultado = 96;
    }
}else if(ano_final == 2025){
	if(tipo == 'F'){
		resultado = 87;
    }else{
    	resultado = 97;
    }
}else if(ano_final == 2026){
	if(tipo == 'F'){
		resultado = 88;
    }else{
    	resultado = 98;
    }
}else if(ano_final == 2027){
	if(tipo == 'F'){
		resultado = 89;
    }else{
    	resultado = 99;
    }
}else if(ano_final == 2028){
	if(tipo == 'F'){
		resultado = 90;
    }else{
    	resultado = 100;
    }
}else if(ano_final == 2029){
	if(tipo == 'F'){
		resultado = 91;
    }else{
    	resultado = 100;
    }
}else if(ano_final == 2030){
	if(tipo == 'F'){
		resultado = 92;
    }else{
    	resultado = 100;
    }
}else if(ano_final > 2030) {
	if(tipo == 'F'){
		resultado = 92;
    }else{
    	resultado = 100;
    }
}

return resultado;
}


var a = false;
var b = false;
var c = false;
var d = false;
var soma = 0;
var total = 0;
var falta_tempo_servico_publico = 0;
var falta_ultimo_cargo = 0;
var tempo_aposentar = 0;
var talta_tempo_servico_publico = 0;
var total_ano = 0;
var total_ano2 = 0;
var somamulher = 0;
var somahomem = 0;
var idade2 = 0;
var ano2 = 0;

if(cargo_codigo != '060011'){
	if(sexo == 'M'){
		if((idade_ano >= 61 &amp;&amp; ano_data_atual == 2021) || (idade_ano >= 62 &amp;&amp; ano_data_atual >= 2022)){

	
			var falta_idade = 61 - (ano_data_atual - ano_data_nascimento);
			var resultado =  falta_idade + ano_data_atual;
			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 62;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 61;
				

			}
			
			
			var pedagio = tempo_servico_averbacao_total_dias - 12775; //35 anos
			if(pedagio >= 0){
				pedagio = 0;
				a = true;
			}else{
			   pedagio = 12775 - tempo_servico_averbacao_total_dias;
			}


			 if(pedagio >= 0 ){
                
                   var novaData = adicionarDiasData(pedagio);	

                   //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
                        e = 2;
            }

			if(tempo_servico_publico_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
             }  

			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotal(ano_data_atual, 'M');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotal(total_ano2, 'M');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}



			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

			
			

			

		}else if((idade_ano &lt; 61 &amp;&amp; ano_data_atual == 2021) || (idade_ano &lt; 62 &amp;&amp; ano_data_atual >= 2022)){
			var pedagio = tempo_servico_averbacao_total_dias - 12775; //35 anos
			if(pedagio >= 0){
				pedagio = 0;
				a = true;
			}else{
			   pedagio = 12775 - tempo_servico_averbacao_total_dias;
			}


			 if(pedagio >= 0 ){

                  var novaData = adicionarDiasData(pedagio);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);

            }

			if(tempo_servico_publico_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
             }  

			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotal(ano_data_atual, 'M');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotal(total_ano2, 'M');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			

			var falta_idade = 61 - (ano_data_atual - ano_data_nascimento);


			var resultado =  falta_idade + ano_data_atual;

			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 62;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 61;
				

			}


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_idade &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_idade &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(total &lt;= falta_idade &amp;&amp; falta_tempo_servico_publico &lt;= falta_idade &amp;&amp; falta_idade  > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade){

                 //var ano = new Date(data_nascimento);

			                 
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento  - 1) + "-" + dias_data_nascimento;	


                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                 e = 5;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}


		
			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio , "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

		}
		
		
	}else if(sexo == 'F'){

		if((idade_ano >= 56 &amp;&amp; ano_data_atual == 2021) || (idade_ano >= 57 &amp;&amp; ano_data_atual >= 2022)){
			


			var falta_idade = 56 - (ano_data_atual - ano_data_nascimento);


			var resultado =  falta_idade + ano_data_atual;

			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 57;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 56;
				

			}



			
			
			var pedagio = tempo_servico_averbacao_total_dias - 10950; //30 anos
			if(pedagio >= 0){
				pedagio = 0;
				a = true;
			}else{
			   pedagio = 10950 - tempo_servico_averbacao_total_dias;
			}


			 if(pedagio >= 0 ){
                
                   var novaData = adicionarDiasData(pedagio);	

                   //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);

            }

			if(tempo_servico_publico_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
             }  

			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotal(ano_data_atual, 'F');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotal(total_ano2, 'F');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}


		



			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

			
			

			

		}else if((idade_ano &lt; 56 &amp;&amp; ano_data_atual == 2021) || (idade_ano &lt; 57 &amp;&amp; ano_data_atual >= 2022)){
			var resultado = tempo_servico_averbacao_total_dias - 10950; //30 anos
			if(pedagio >= 0){
				pedagio = 0;
				a = true;
			}else{
			   pedagio = 10950 - tempo_servico_averbacao_total_dias;
			}


			 if(pedagio >= 0 ){
              

                   var novaData = adicionarDiasData(pedagio);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);

            }

			if(tempo_servico_publico_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
             }  

			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotal(ano_data_atual, 'F');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotal(total_ano2, 'F');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			

			var falta_idade = 56 - (ano_data_atual - ano_data_nascimento);


			var resultado =  falta_idade + ano_data_atual;

			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 57;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 56;
				

			}


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_idade &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_idade &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(total &lt;= falta_idade &amp;&amp; falta_tempo_servico_publico &lt;= falta_idade &amp;&amp; falta_idade  > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade){

                 //var ano = new Date(data_nascimento);

			                 
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento  - 1) + "-" + dias_data_nascimento;	


                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                 e = 5;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}


		
			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

		}
	}

}else if(cargo_codigo == '060011'){
	if(sexo == 'M'){
		if((idade_ano >= 56 &amp;&amp; ano_data_atual == 2021) || (idade_ano >= 57 &amp;&amp; ano_data_atual >= 2022)){

			var falta_idade = 56 - (ano_data_atual - ano_data_nascimento);

			var resultado =  falta_idade + ano_data_atual;

			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 57;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 56;
				

			}
			

			if(tempo_servico_averbacao_total_professor_ebbt_dias == null){
				var resultado_final = tempo_servico_averbacao_total_dias;
			}else{
				var resultado_final = tempo_servico_averbacao_total_professor_ebbt_dias;
			}
			
			var pedagio = resultado_final - 10950; //35 anos
			if(pedagio >= 0){
				pedagio = 0;
				a = true;
			}else{
			   pedagio = 10950 - resultado_final;
			}


			 if(pedagio >= 0 ){
                
                   var novaData = adicionarDiasData(pedagio);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
            

            }

		
			if(tempo_servico_publico_professor_ebbt_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_professor_ebbt_averbacao_total_ano;
             }  



			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotalprofessorebtt(ano_data_atual, 'M');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotalprofessorebtt(total_ano2, 'M');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}


		



			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

			
			

			

		}else if((idade_ano &lt; 56 &amp;&amp; ano_data_atual == 2021) || (idade_ano &lt; 57 &amp;&amp; ano_data_atual >= 2022)){




			if(tempo_servico_averbacao_total_professor_ebbt_dias == null){
				var resultado_final = tempo_servico_averbacao_total_dias;
			}else{
				var resultado_final = tempo_servico_averbacao_total_professor_ebbt_dias;
			}

			var resultado = resultado_final  - 10950; //35 anos 10950
			if(resultado >= 0){
				resultado = 0;
				a = true;
			}else{
			   resultado = 10950 - resultado_final ;
			}


			 if(resultado >= 0 ){
                

                   var novaData = adicionarDiasData(resultado);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
            
            }

			if(tempo_servico_publico_professor_ebbt_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_professor_ebbt_averbacao_total_ano ;
             }  


			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotalprofessorebtt(ano_data_atual, 'M');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotalprofessorebtt(total_ano2, 'M');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			

			var falta_idade = 56 - (ano_data_atual - ano_data_nascimento);


			var resultado =  falta_idade + ano_data_atual;

			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 57;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 56;
				

			}


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_idade &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_idade &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(total &lt;= falta_idade &amp;&amp; falta_tempo_servico_publico &lt;= falta_idade &amp;&amp; falta_idade  > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade){

                 //var ano = new Date(data_nascimento);

			                 
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento  - 1) + "-" + dias_data_nascimento;	


                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                 e = 5;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}


		
			if(resultado > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

		}
		
		
	}else if(sexo == 'F'){

		if((idade_ano >= 51 &amp;&amp; ano_data_atual == 2021) || (idade_ano >= 52 &amp;&amp; ano_data_atual >= 2022)){
			


			var falta_idade = 51 - (ano_data_atual - ano_data_nascimento);


			var resultado =  falta_idade + ano_data_atual;

			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 52;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 51;
				

			}

			
			
			if(tempo_servico_averbacao_total_professor_ebbt_dias == null){
				var resultado_final = tempo_servico_averbacao_total_dias;
			}else{
				var resultado_final = tempo_servico_averbacao_total_professor_ebbt_dias;
			}
			
			
			var pedagio = resultado_final - 9125; //25 anos
			if(pedagio >= 0){
				pedagio = 0;
				a = true;
			}else{
			   pedagio = 9125 - resultado_final;
			}


			 if(pedagio >= 0 ){
                
                   var novaData = adicionarDiasData(pedagio);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
          

            }

			

			if(tempo_servico_publico_professor_ebbt_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_professor_ebbt_averbacao_total_ano ;
             }  
 

			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotalprofessorebtt(ano_data_atual, 'F');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotalprofessorebtt(total_ano2, 'F');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(total &lt;= falta_idade &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}


		



			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

			
			

			

		}else if((idade_ano &lt; 51 &amp;&amp; ano_data_atual == 2021) || (idade_ano &lt; 52 &amp;&amp; ano_data_atual >= 2022)){


			
			if(tempo_servico_averbacao_total_professor_ebbt_dias == null){
				var resultado_final = tempo_servico_averbacao_total_dias;
			}else{
				var resultado_final = tempo_servico_averbacao_total_professor_ebbt_dias;
			}

			var resultado = resultado_final - 9125; //25 anos

			if(resultado >= 0){
				resultado = 0;
				a = true;
			}else{
			   resultado = 9125 - resultado_final ;
			}


			 if(resultado >= 0 ){
                
                   var novaData = adicionarDiasData(resultado);	
                   //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);
            }

			



			 if(tempo_servico_publico_professor_ebbt_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_professor_ebbt_averbacao_total_ano ;
             }  


			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			//transformar dias em ano
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;

			retorno = somatotalprofessorebtt(ano_data_atual, 'F');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotalprofessorebtt(total_ano2, 'F');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			

			var falta_idade = 51 - (ano_data_atual - ano_data_nascimento);


			var resultado =  falta_idade + ano_data_atual;

			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 52;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 51;
				

			}


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_idade &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){
				 t = 1;
                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_idade &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(total &lt;= falta_idade &amp;&amp; falta_tempo_servico_publico &lt;= falta_idade &amp;&amp; falta_idade  > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade){

                 //var ano = new Date(data_nascimento);

			                 
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento  - 1) + "-" + dias_data_nascimento;	


                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                 e = 5;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}


		
			if(resultado > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
			}
		}		
			
	}

}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>total_ano</name>
        <rename>Art_4</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>falta_idade</name>
        <rename>falta_idade</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>pedagio</name>
        <rename>pedagio</rename>
        <type>Integer</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>832</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Art_4_Professor_EBTT_Normal</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Artigo 20 pec 2019

var anos_dias = 0;
var ab = 0;
function adicionarDiasDataNascimento(dias){
    var hoje        = data_nascimento;
    var dataVenc    = new Date(hoje.getTime() + (dias * 24 * 60 * 60 * 1000));

	if(dataVenc.getDate() &lt; 10){
		var dias = '0'+dataVenc.getDate();
	}else{
		var dias = dataVenc.getDate();
	}

	
	if(dataVenc.getMonth() &lt; 10){
		mes = dataVenc.getMonth();
		var mes2 = '0'+ mes;
	}else{
		mes = dataVenc.getMonth();
		var mes2 = dataVenc.getMonth();
	}

	
    return dataVenc.getFullYear() + "-" + (mes2) + "-" + dias;
}

function adicionarDiasData(dias){
    var hoje        = data_atual;
    var dataVenc    = new Date(hoje.getTime() + (dias * 24 * 60 * 60 * 1000));

	if(dataVenc.getDate() &lt; 10){
		var dias = '0'+dataVenc.getDate();
	}else{
		var dias = dataVenc.getDate();
	}

	
	if(dataVenc.getMonth() &lt; 10){
		mes = dataVenc.getMonth();
		var mes2 = '0'+ mes;
	}else{
		mes = dataVenc.getMonth();
		var mes2 = dataVenc.getMonth();
	}

	
    return dataVenc.getFullYear() + "-" + (mes2) + "-" + dias;
}


function somatotal(ano_final, tipo){
resultado =0;

if(ano_final == 2021){
	if(tipo == 'F'){
		resultado = 88;
    }else{
    	resultado = 98;
    }
}else if(ano_final == 2022){
	if(tipo == 'F'){
		resultado = 89;
    }else{
    	resultado = 99;
    }
}else if(ano_final == 2023){
	if(tipo == 'F'){
		resultado = 90;
    }else{
    	resultado = 100;
    }
}else if(ano_final == 2024){
	if(tipo == 'F'){
		resultado = 91;
    }else{
    	resultado = 101;
    }
}else if(ano_final == 2025){
	if(tipo == 'F'){
		resultado = 92;
    }else{
    	resultado = 102;
    }
}else if(ano_final == 2026){
	if(tipo == 'F'){
		resultado = 93;
    }else{
    	resultado = 103;
    }
}else if(ano_final == 2027){
	if(tipo == 'F'){
		resultado = 94;
    }else{
    	resultado = 104;
    }
}else if(ano_final == 2028){
	if(tipo == 'F'){
		resultado = 95;
    }else{
    	resultado = 105;
    }
}else if(ano_final == 2029){
	if(tipo == 'F'){
		resultado = 96;
    }else{
    	resultado = 105;
    }
}else if(ano_final == 2030){
	if(tipo == 'F'){
		resultado = 97;
    }else{
    	resultado = 105;
    }
}else if(ano_final == 2031){
	if(tipo == 'F'){
		resultado = 98;
    }else{
    	resultado = 105;
    }
}else if(ano_final == 2032){
	if(tipo == 'F'){
		resultado = 99;
    }else{
    	resultado = 105;
    }
}else if(ano_final == 2033){
	if(tipo == 'F'){
		resultado = 100;
    }else{
    	resultado = 105;
    }
}else if(ano_final > 2033) {
	if(tipo == 'F'){
		resultado = 100;
    }else{
    	resultado = 105;
    }
}

return resultado;
}

var a = false;
var b = false;
var c = false;
var d = false;
var soma = 0;
var total = 0;
var pedagio = 0;
var falta_tempo_servico_publico = 0;
var falta_ultimo_cargo = 0;
var tempo_aposentar = 0;
var talta_tempo_servico_publico = 0;
var total_ano = 0;
var total_ano2 = 0;
var somamulher = 0;
var somahomem = 0;
var idade2 = 0;
var ano2 = 0;

if(cargo_codigo == '060011'){
	if(sexo == 'M'){
		if((idade_ano >= 61 &amp;&amp; ano_data_atual == 2021) || (idade_ano >= 62 &amp;&amp; ano_data_atual >= 2022)){
			
			var falta_idade = 61 - (ano_data_atual - ano_data_nascimento);
			var resultado =  falta_idade + ano_data_atual;
			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 62;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 61;
				

			}
			
			var pedagio = tempo_servico_averbacao_total_dias - 12775; //35 anos
			if(pedagio >= 0){
				pedagio = 0;
				a = true;
			}else{
			   pedagio = 12775 - tempo_servico_averbacao_total_dias;
			}


			 if(pedagio >= 0 ){
                
                   var novaData = adicionarDiasData(tempo_aposentar);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);

                        e = 2;
            }

			if(tempo_servico_publico_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
             }  

			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotal(ano_data_atual, 'M');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotal(total_ano2, 'M');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}



			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

			
			

			

		}else if((idade_ano &lt; 61 &amp;&amp; ano_data_atual == 2021) || (idade_ano &lt; 62 &amp;&amp; ano_data_atual >= 2022)){
			var pedagio = tempo_servico_averbacao_total_dias - 12775; //35 anos
			if(pedagio >= 0){
				pedagio = 0;
				a = true;
			}else{
			   pedagio = 12775 - tempo_servico_averbacao_total_dias;
			}


			 if(pedagio >= 0 ){

                  var novaData = adicionarDiasData(tempo_aposentar);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);

            }

			if(tempo_servico_publico_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
             }  

			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotal(ano_data_atual, 'M');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotal(total_ano2, 'M');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			

			var falta_idade = 61 - (ano_data_atual - ano_data_nascimento);


			var resultado =  falta_idade + ano_data_atual;

			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 62;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 61;
				

			}


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_idade &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_idade &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(total &lt;= falta_idade &amp;&amp; falta_tempo_servico_publico &lt;= falta_idade &amp;&amp; falta_idade  > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade){

                 //var ano = new Date(data_nascimento);

			                 
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento  - 1) + "-" + dias_data_nascimento;	


                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                 e = 5;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}


		
			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio , "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

		}
		
		
	}else if(sexo == 'F'){

		if((idade_ano >= 56 &amp;&amp; ano_data_atual == 2021) || (idade_ano >= 57 &amp;&amp; ano_data_atual >= 2022)){
			


			var falta_idade = 56 - (ano_data_atual - ano_data_nascimento);


			var resultado =  falta_idade + ano_data_atual;

			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 57;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 56;
				

			}



			
			
			var pedagio = tempo_servico_averbacao_total_dias - 10950; //30 anos
			if(pedagio >= 0){
				pedagio = 0;
				a = true;
			}else{
			   pedagio = 10950 - tempo_servico_averbacao_total_dias;
			}


			 if(pedagio >= 0 ){
                
                   var novaData = adicionarDiasData(pedagio);	

                   //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);

            }

			if(tempo_servico_publico_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
             }  

			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotal(ano_data_atual, 'F');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotal(total_ano2, 'F');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}


		



			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

			
			

			

		}else if((idade_ano &lt; 56 &amp;&amp; ano_data_atual == 2021) || (idade_ano &lt; 57 &amp;&amp; ano_data_atual >= 2022)){
			var resultado = tempo_servico_averbacao_total_dias - 10950; //30 anos
			if(pedagio >= 0){
				pedagio = 0;
				a = true;
			}else{
			   pedagio = 10950 - tempo_servico_averbacao_total_dias;
			}


			 if(pedagio >= 0 ){
              

                   var novaData = adicionarDiasData(pedagio);	

                                //converter para data String novaData
                   var array2 = new Array();
                   array2 = novaData.split('-');
                   //Idade no formato data
                   var total_ano_pedagio = new Date(array2[0], (array2[1]) , array2[2]);

            }

			if(tempo_servico_publico_averbacao_total_ano >= 20){
                   b = true;
             }else{
                   falta_tempo_servico_publico = 20 - tempo_servico_publico_averbacao_total_ano ;
             }  

			if(ultimo_cargo_ano >= 5){
                  c = true;
				  
            }else{
                  falta_ultimo_cargo = 5 - ultimo_cargo_ano;
            }

			
            //tempo serviço em anos e idade em anos -  trazidos SQL
			var x = Math.round(tempo_servico_averbacao_total_dias / 365);
			soma = (ano_data_atual - ano_data_nascimento) + x;
			retorno = somatotal(ano_data_atual, 'F');
			total_ano2 = ano_data_atual;
			if(retorno &lt;= soma){
				d = true;
				total = 0;
			}else{
				for(var i=0;;i++){
					soma = soma +2;
					total_ano2 = total_ano2 +1;
					retorno2 = somatotal(total_ano2, 'F');
					if(retorno2 &lt;= soma){
						break;
					}
				}
				total = (soma - ((ano_data_atual - ano_data_nascimento) + tempo_servico_averbacao_total_ano))/2;
			
			} 
			

			if(a == true &amp;&amp; b == true &amp;&amp; c== true){
                 tempo_aposentar = 0;
                 total_ano = data_atual;
                 e = 1;

            }
			

			var falta_idade = 56 - (ano_data_atual - ano_data_nascimento);


			var resultado =  falta_idade + ano_data_atual;

			if(resultado > 2021){
				var ano_atual_aposen= ano_data_nascimento + 57;
				falta_idade = falta_idade + 1;
			}else{
				var ano_atual_aposen= ano_data_nascimento + 56;
				

			}


			if(total &lt;= 0){
                    d = true;
            }else{
					
                ano_final2 = ano_data_atual + total;
					
				if(total &lt;= 0){
                    d = true;
            	}else{
					
                    ano_final2 = ano_data_atual + total;
				
					var total_nasc = dias_data_nascimento + mes_data_nascimento;

					var total_adm = dias_data_admissao + mes_data_admissao;

					if(total_nasc  >= total_adm){
 						if(mes_data_nascimento &lt; 10){
                            mes_data_nascimento = '0'+ mes_data_nascimento;
                        }

                        if(dias_data_nascimento &lt; 10){
                            dias_data_nascimento = '0'+ dias_data_nascimento;
                        }
						
						var x = new Date(ano_final2, (mes_data_nascimento - 1), dias_data_nascimento);
						
					}else{
 						if(mes_data_admissao &lt; 10){
                            mes_data_admissao = '0'+ mes_data_admissao ;
                         }

                        if(dias_data_admissao &lt; 10){
                            dias_data_admissao = '0'+ dias_data_admissao;
                        }
						
						var x = new Date(ano_final2, (mes_data_admissao - 1), dias_data_admissao);
					}

					total_ano_total = x;
				}
					
			}


			if(total &lt;= falta_ultimo_cargo &amp;&amp; falta_idade &lt;= falta_ultimo_cargo &amp;&amp; falta_ultimo_cargo > 0 &amp;&amp; falta_ultimo_cargo >= falta_tempo_servico_publico){

                 var ano_atual_aposen= ano_data_admissao  + 5; 


                 if(dias_data_admissao &lt; 10){
                    var dias = '0'+ dias_data_admissao;
                 }else{
                    var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                    var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                    var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	

                 var array4 = new Array();
                 array4 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData4  = new Date((array4[0]), array4[1], array4[2]);

                 total_ano = novaData4; 

                        e = 3;
            }else if(total &lt;= falta_tempo_servico_publico &amp;&amp; falta_idade &lt;= falta_tempo_servico_publico &amp;&amp; falta_tempo_servico_publico > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_tempo_servico_publico){


                 var ano_atual_aposen= ano_data_admissao  + 20; 


                 if(dias_data_admissao &lt; 10){
                 	  var dias = '0'+ dias_data_admissao;
                 }else{
                      var dias = dias_data_admissao;
                 }


                 if(mes_data_admissao &lt; 10){
                      var mes2 = '0'+ (mes_data_admissao - 1) ;
                 }else{
                      var mes2 = mes_data_admissao - 1;
                 }

                 var data_atual_aposenta =  ano_atual_aposen + "-" + mes2+ "-" + dias;	
                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                        e = 4;

            }else if(total &lt;= falta_idade &amp;&amp; falta_tempo_servico_publico &lt;= falta_idade &amp;&amp; falta_idade  > 0 &amp;&amp; falta_ultimo_cargo &lt;= falta_idade){

                 //var ano = new Date(data_nascimento);

			                 
                 var data_atual_aposenta =  ano_atual_aposen + "-" + (mes_data_nascimento  - 1) + "-" + dias_data_nascimento;	


                 var array3 = new Array();
                 array3 = data_atual_aposenta .split('-');
                 //Idade no formato data
                 var novaData3  = new Date((array3[0]), array3[1], array3[2]);

                 total_ano = novaData3; 

                 e = 5;

            }else if(falta_idade &lt;= total &amp;&amp; falta_tempo_servico_publico &lt;= total  &amp;&amp; total  > 0 &amp;&amp; falta_ultimo_cargo &lt;= total){
				
				total_ano = total_ano_total ;
			}else{
				total_ano = data_atual;
			}


		
			if(pedagio > 0){
				//compra data atual com a data do pedagio
				// tranforma em milesimo total_ano_pedagio 
				
				
				var date_total_ano_pedagio = date2str(total_ano_pedagio, "yyyyMMdd");
				var total_ano_diferenca = date2str(total_ano , "yyyyMMdd");

				if(total_ano_diferenca &lt; date_total_ano_pedagio){
					total_ano = total_ano_pedagio;
				}
				
					
			}

		}
	}

}else{
	total_ano = null;
}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>total_ano</name>
        <rename>Art_4_Prof_EBTT_FUNCIONARIO_COMUM</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>832</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DIM Tempo</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>Pesquisa</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>dim_tempo</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>Melhor_Data_Aposentadoria</name>
        <field>day_desc</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>date_pk</name>
        <rename>date_pk</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>512</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>DIM Tempo 2</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>Pesquisa</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>dim_tempo</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>data_acerto</name>
        <field>day_desc</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>date_pk</name>
        <rename>data_codigo_acerto</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>416</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Database lookup</name>
    <type>DBLookup</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>Pesquisa</connection>
    <cache>N</cache>
    <cache_load_all>N</cache_load_all>
    <cache_size>0</cache_size>
    <lookup>
      <schema/>
      <table>dim_status_lei_aposentar</table>
      <orderby/>
      <fail_on_multiple>N</fail_on_multiple>
      <eat_row_on_failure>N</eat_row_on_failure>
      <key>
        <name>status</name>
        <field>codigo</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>codigo</name>
        <rename>codigo</rename>
        <default/>
        <type>Integer</type>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>320</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Formula</name>
    <type>Formula</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <formula>
      <field_name>diferenca_data_pec_data_atual</field_name>
      <formula_string>now()-[data_pedagio]</formula_string>
      <value_type>Integer</value_type>
      <value_length>-1</value_length>
      <value_precision>-1</value_precision>
      <replace_field/>
    </formula>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>160</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Modified Java Script Value</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

var Art_20_final

if(Art_20_Prof_EBTT_FUNCIONARIO_COMUM != null){

	var date_Art_20_Prof_EBTT_FUNCIONARIO_COMUM = date2str(Art_20_Prof_EBTT_FUNCIONARIO_COMUM, "yyyyMMdd");
	var total_Art_20_diferenca = date2str(Art_20 , "yyyyMMdd");

	if(total_Art_20_diferenca &lt; date_Art_20_Prof_EBTT_FUNCIONARIO_COMUM){
		Art_20_final = Art_20;
	}else{
		Art_20_final = Art_20_Prof_EBTT_FUNCIONARIO_COMUM;
	}
		
}else{
	Art_20_final = Art_20;

}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>Art_20_final</name>
        <rename>Art_20_final</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>736</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Modified Java Script Value 2</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

var Art_4_final

if(Art_4_Prof_EBTT_FUNCIONARIO_COMUM != null){

	var date_Art_4_Prof_EBTT_FUNCIONARIO_COMUM = date2str(Art_4_Prof_EBTT_FUNCIONARIO_COMUM, "yyyyMMdd");
	var total_Art_4_diferenca = date2str(Art_4, "yyyyMMdd");

	if(total_Art_4_diferenca &lt; date_Art_4_Prof_EBTT_FUNCIONARIO_COMUM){
		Art_4_final = Art_4;
	}else{
		Art_4_final = Art_4_Prof_EBTT_FUNCIONARIO_COMUM;
	}
		
}else{
	Art_4_final = Art_4;

}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>Art_4_final</name>
        <rename>Art_4_final</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>656</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Modified Java Script Value 2 2</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>//Script here

var Art_10_final

if(Art_4_Prof_EBTT_FUNCIONARIO_COMUM != null){

	var date_Art_10_Prof_EBTT_FUNCIONARIO_COMUM = date2str(Art_10_Prof_EBTT_FUNCIONARIO_COMUM, "yyyyMMdd");
	var total_Art_10_diferenca = date2str(Art_10, "yyyyMMdd");

	if(total_Art_10_diferenca &lt; date_Art_10_Prof_EBTT_FUNCIONARIO_COMUM){
		Art_10_final = Art_10;
	}else{
		Art_10_final = Art_10_Prof_EBTT_FUNCIONARIO_COMUM;
	}
		
}else{
	Art_10_final = Art_10;

}</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>Art_10_final</name>
        <rename>Art_10_idade_final</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>224</xloc>
      <yloc>96</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Selecionado_Melhor_Data</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>N</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>var date_art4 = date2str(Art_4_final, "yyyyMMdd");
var numero_art4 = parseInt(date_art4);

var date_art20 = date2str(Art_20_final, "yyyyMMdd");
var numero_art20 = parseInt(date_art20);

var date_art10_idade_final = date2str(Art_10_idade_final, "yyyyMMdd");
var numero_art10_idade = parseInt(date_art10_idade_final);
var status = '';

if(numero_art4 &lt;= numero_art20 &amp;&amp; numero_art4 &lt;= numero_art10_idade){

	if(Art_10_insalubridade_final != null){
		var date_art10_InsPecu = date2str(Art_10_insalubridade_final, "yyyyMMdd");
		var numero_date_art10_InsPecu = parseInt(date_art10_InsPecu);
		if(numero_art4 &lt;= numero_date_art10_InsPecu){
			var data_final = Art_4;
			status = '1';
		}else if (numero_art4 > numero_date_art10_InsPecu){
			var data_final = Art_10_insalubridade_final;
			status = '4';
		}
	}else{
		var data_final = Art_4;
		status = '1';
	}
	
}else if(numero_art20 &lt;= numero_art4 &amp;&amp; numero_art20 &lt;= numero_art10_idade){

	if(Art_10_insalubridade_final != null){
		var date_art10_InsPecu = date2str(Art_10_insalubridade_final, "yyyyMMdd");
		var numero_date_art10_InsPecu = parseInt(date_art10_InsPecu);
		if(numero_art20 &lt;= numero_date_art10_InsPecu){
			var data_final = Art_20;
			status = '2';
		}else if (numero_art20 > numero_date_art10_InsPecu){
			var data_final = Art_10_insalubridade_final;
			status = '4';
		}
	}else{
		var data_final = Art_20;
		status = '2';
	}

}else if(numero_art10_idade &lt;= numero_art20 &amp;&amp; numero_art10_idade &lt;= numero_art4){

	if(Art_10_insalubridade_final != null){
		var date_art10_InsPecu = date2str(Art_10_insalubridade_final, "yyyyMMdd");
		var numero_date_art10_InsPecu = parseInt(date_art10_InsPecu);
		if(numero_art10_idade &lt;= numero_date_art10_InsPecu){
			var data_final = Art_10_idade_final;
			status = '3';
		}else if (numero_art10_idade > numero_date_art10_InsPecu){
			var data_final = Art_10_insalubridade_final;
			status = '4';
		}
	}else{
		var data_final = Art_10_idade_final;
		status = '3';
	}

}else{
	var data_final = Art_10_insalubridade_final;
	status = '4';
}







</jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>data_final</name>
        <rename>Melhor_Data_Aposentadoria</rename>
        <type>Date</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>status</name>
        <rename>status</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Select values</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>codigo</name>
      </field>
      <field>
        <name>matriculasiape</name>
      </field>
      <field>
        <name>nomeservidor</name>
      </field>
      <field>
        <name>dtnascimento</name>
      </field>
      <field>
        <name>admissaodata</name>
      </field>
      <field>
        <name>sexo</name>
      </field>
      <field>
        <name>cargo_codigo</name>
      </field>
      <field>
        <name>data_acerto</name>
      </field>
      <field>
        <name>data_atual</name>
      </field>
      <field>
        <name>data_pedagio</name>
      </field>
      <field>
        <name>ano_data_atual</name>
      </field>
      <field>
        <name>mes_data_atual</name>
      </field>
      <field>
        <name>dias_data_atual</name>
      </field>
      <field>
        <name>data_insalubridade</name>
      </field>
      <field>
        <name>ano_data_insalubridade</name>
      </field>
      <field>
        <name>mes_data_insalubridade</name>
      </field>
      <field>
        <name>dias_data_insalubridade</name>
      </field>
      <field>
        <name>ano_data_admissao</name>
      </field>
      <field>
        <name>mes_data_admissao</name>
      </field>
      <field>
        <name>dias_data_admissao</name>
      </field>
      <field>
        <name>ano_data_nascimento</name>
      </field>
      <field>
        <name>mes_data_nascimento</name>
      </field>
      <field>
        <name>dias_data_nascimento</name>
      </field>
      <field>
        <name>idade_ano</name>
      </field>
      <field>
        <name>tempo_servico_publico</name>
      </field>
      <field>
        <name>ultimo_cargo_ano</name>
      </field>
      <field>
        <name>tempo_servico_averbacao_total_dias</name>
      </field>
      <field>
        <name>tempo_servico_averbacao_total_ano</name>
      </field>
      <field>
        <name>tempo_servico_publico_averbacao_total_ano</name>
      </field>
      <field>
        <name>tempo_servico_averbacao_total_professor_ebbt_dias</name>
      </field>
      <field>
        <name>tempo_servico_averbacao_total_professor_ebtt_ano</name>
      </field>
      <field>
        <name>tempo_servico_publico_professor_ebbt_averbacao_total_ano</name>
      </field>
      <field>
        <name>diferenca_data_pec_data_atual</name>
      </field>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>idade_ano</name>
        <rename>idade_ano</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>tempo_servico_averbacao_total_dias</name>
        <rename>tempo_servico_averbacao_total_dias</rename>
        <type>Integer</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask/>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>data_pedagio</name>
        <rename>data_pedagio</rename>
        <type>Date</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask>yyyy-MM-dd</conversion_mask>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
      <meta>
        <name>data_atual</name>
        <rename>data_atual</rename>
        <type>Date</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask>yyyy-MM-dd</conversion_mask>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>352</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Select values 2</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>nomeservidor</name>
      </field>
      <field>
        <name>Art_4_final</name>
      </field>
      <field>
        <name>Art_20_final</name>
      </field>
      <field>
        <name>Art_10_idade_final</name>
      </field>
      <field>
        <name>Art_10_insalubridade_final</name>
      </field>
      <field>
        <name>Melhor_Data_Aposentadoria</name>
      </field>
      <field>
        <name>status</name>
      </field>
      <field>
        <name>codigo</name>
      </field>
      <field>
        <name>data_acerto</name>
      </field>
      <select_unspecified>N</select_unspecified>
      <meta>
        <name>Melhor_Data_Aposentadoria</name>
        <rename>Melhor_Data_Aposentadoria</rename>
        <type>Date</type>
        <length>-2</length>
        <precision>-2</precision>
        <conversion_mask>dd-MM-yyyy</conversion_mask>
        <date_format_lenient>false</date_format_lenient>
        <date_format_locale/>
        <date_format_timezone/>
        <lenient_string_to_number>false</lenient_string_to_number>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>208</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>String operations</name>
    <type>StringOperations</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <in_stream_name>tempo_servico_averbacao_total_dias</in_stream_name>
        <out_stream_name/>
        <trim_type>both</trim_type>
        <lower_upper>none</lower_upper>
        <padding_type>none</padding_type>
        <pad_char/>
        <pad_len/>
        <init_cap>no</init_cap>
        <mask_xml>none</mask_xml>
        <digits>digits_only</digits>
        <remove_special_characters>none</remove_special_characters>
      </field>
      <field>
        <in_stream_name>tempo_servico_averbacao_total_professor_ebbt_dias</in_stream_name>
        <out_stream_name/>
        <trim_type>both</trim_type>
        <lower_upper>none</lower_upper>
        <padding_type>none</padding_type>
        <pad_char/>
        <pad_len/>
        <init_cap>no</init_cap>
        <mask_xml>none</mask_xml>
        <digits>digits_only</digits>
        <remove_special_characters>none</remove_special_characters>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>256</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Table input</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection/>
    <sql>SELECT
  distinct f.codigo
, f.matriculasiape
, f.matriculaufv
, nomeservidor
, dtnascimento
, admissaodata
, sexo
, cargo_codigo
, '01-04-2021' as data_acerto
, '2021-04-01' as data_atual
, '2019-11-12' as data_pedagio
, cast(EXTRACT(YEAR FROM TIMESTAMP '2021-04-01') AS INTEGER) as ano_data_atual 
, cast(EXTRACT(MONTH FROM TIMESTAMP '2021-04-01') AS INTEGER) as mes_data_atual 
, cast(EXTRACT(DAY FROM TIMESTAMP '2021-04-01') AS INTEGER) as dias_data_atual 

, f.data_insalubridade
, cast(EXTRACT(YEAR FROM f.data_insalubridade) AS INTEGER) as ano_data_insalubridade
, cast(EXTRACT(MONTH FROM f.data_insalubridade) AS INTEGER) as mes_data_insalubridade
, cast(EXTRACT(DAY FROM f.data_insalubridade) AS INTEGER) as dias_data_insalubridade

, cast(EXTRACT(YEAR FROM f.admissaodata) AS INTEGER) as ano_data_admissao
, cast(EXTRACT(MONTH FROM f.admissaodata) AS INTEGER) as mes_data_admissao
, cast(EXTRACT(DAY FROM f.admissaodata) AS INTEGER) as dias_data_admissao

, cast(EXTRACT(YEAR FROM f.dtnascimento) AS INTEGER) as ano_data_nascimento
, cast(EXTRACT(MONTH FROM f.dtnascimento) AS INTEGER) as mes_data_nascimento
, cast(EXTRACT(DAY FROM f.dtnascimento) AS INTEGER) as dias_data_nascimento

, cast(TO_CHAR ( AGE('2021-04-01', f.dtnascimento) , 'YY') AS INTEGER) AS idade_ano
, cast(TO_CHAR ( AGE('2021-04-01', f.admissaodata) , 'YY') AS INTEGER) AS tempo_servico_publico
, cast(TO_CHAR ( AGE('2021-04-01', f.admissaodata) , 'YY') AS INTEGER)AS ultimo_cargo_ano

, case when dias_tempo > 0 then
		Date(DATE('2021-04-01') + cast(dias_tempo AS INTEGER)) - f.admissaodata
	else
		DATE('2021-04-01') - f.admissaodata
	end as tempo_servico_averbacao_total_dias

, case when  dias_tempo > 0 then cast((TO_CHAR( AGE((cast( '2021-04-01' AS date) + cast(dias_tempo AS INTEGER)), f.admissaodata) , 'YY')) AS INTEGER)
else Cast((TO_CHAR ( AGE('2021-04-01', f.admissaodata) , 'YY')) AS INTEGER)
end as tempo_servico_averbacao_total_ano


, case when  dias_tempo_servico_publico > 0 then cast((TO_CHAR( AGE((cast( '2021-04-01' AS date) + cast(dias_tempo_servico_publico AS INTEGER)), f.admissaodata) , 'YY')) AS INTEGER)
else Cast((TO_CHAR ( AGE('2021-04-01', f.admissaodata) , 'YY')) AS INTEGER)
end as tempo_servico_publico_averbacao_total_ano

, case when dias_docencia > 0 then
		Date(DATE('2021-04-01') + cast(dias_docencia AS INTEGER)) - f.admissaodata
	else Date(DATE('2021-04-01')) - f.admissaodata
	end as tempo_servico_averbacao_total_professor_ebbt_dias

, case when  dias_docencia > 0 then cast((TO_CHAR( AGE((cast( '2021-04-01' AS date) + cast(dias_docencia AS INTEGER)), f.admissaodata) , 'YY')) AS INTEGER)
else cast((TO_CHAR( AGE((cast( '2021-04-01' AS date)), f.admissaodata) , 'YY')) AS INTEGER)
end as tempo_servico_averbacao_total_professor_ebtt_ano

, case when  dias_tempo_servico_publico_professor_ebtt > 0 then cast((TO_CHAR( AGE((cast( '2021-04-01' AS date) + cast(dias_tempo_servico_publico_professor_ebtt AS INTEGER)), f.admissaodata) , 'YY')) AS INTEGER)
else cast((TO_CHAR( AGE((cast( '2021-04-01' AS date)), f.admissaodata) , 'YY')) AS INTEGER)
end as tempo_servico_publico_professor_ebbt_averbacao_total_ano,
dias_tempo_servico_publico_professor_ebtt,
dias_tempo, 
fa.abono
FROM fato_faixa_etaria_servico as fa
inner join dim_funcionario as f on fa.codigo_funcionario_pk = f.codigo
left join dim_averbacao as a on a.matriculasiape = f.matriculasiape
left join dim_cargo as cc on cc.cargocodigo = f.cargo_codigo
where fa.abono = 'N' and f.abono = 'N'

</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>80</xloc>
      <yloc>16</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Update</name>
    <type>Update</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>Pesquisa</connection>
    <skip_lookup>N</skip_lookup>
    <commit>100</commit>
    <use_batch>N</use_batch>
    <error_ignored>Y</error_ignored>
    <ignore_flag_field/>
    <lookup>
      <schema/>
      <table>fato_faixa_etaria_servico</table>
      <key>
        <name>codigo</name>
        <field>codigo_funcionario_pk</field>
        <condition>=</condition>
        <name2/>
      </key>
      <key>
        <name>data_codigo_acerto</name>
        <field>codigo_tempo_pk</field>
        <condition>=</condition>
        <name2/>
      </key>
      <value>
        <name>codigo_data_aposentadoria</name>
        <rename>date_pk</rename>
      </value>
    </lookup>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>656</xloc>
      <yloc>176</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
</transformation>
